function [ template ] = db_template_model_fcn(structureName)
% DB_TEMPLATE: Defines a template structure for all the Brainstorm data types.
%
% USAGE :  [template] = db_template(structureName);
    switch lower(structureName)
    case 'petmat'
        template = struct(...
            'Comment',     '', ...
            'Cube',        [], ...
            'Voxsize',     [], ...
            'Tracer',      [], ...
            'Frames',      [], ...
            'NCS',         [], ...
            'SCS',         [], ...
            'Header',      [], ...
            'Histogram',   [], ...
            'InitTransf',  [], ...   % Cell-array Nx2: {label, transf4x4}, label={'vox2ras', 'permute', 'flipdim', 'reg'}
            'Labels',      [], ...
            'History',     []);

    case 'femmat'                        % FEM head model (tetrahedral or hexahedral mesh)
        template = struct(...
            'Comment',         '', ...
            'Vertices',        [], ...   % [Nvert x 3] double: List of position of the nodes with their three cartesian coordinates
            'Elements',        [], ...   % [Nelem x 4] integers for tetrahedral meshes; or [Nelem x 8] integers for hexahedral meshes (1-based indices in the Vertices matrix)
            'Tissue',          [], ...   % [Nelem x 1] integer: tissue classification for each node
            'TissueLabels',    [], ...   % [1 x Ntissue] cell array: label of the tissues in this head model
            'Tensors',         [], ...   % [Nelem x 12] double: Conductivity tensors: [V1(1:3) V2(1:3) V3(1:3) L1 L2 L3]
            'History',         []);
        
    case 'datamat'
        template = struct('F',            [], ...
                          'Std',          [], ...
                          'Comment',      '', ...
                          'ChannelFlag',  [], ...
                          'Time',         [], ...
                          'DataType',     'recordings', ...
                          'Device',       '', ...
                          'nAvg',         1, ...
                          'Leff',         1, ...
                          'Events',       repmat(db_template('event'), 0), ...
                          'ColormapType', [], ...
                          'DisplayUnits', [], ...
                          'History',      []);
  
    otherwise
        error('Unknown data template : %s', structureName);
    end
end
  
  


